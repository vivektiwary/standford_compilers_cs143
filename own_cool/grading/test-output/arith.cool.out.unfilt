#name "./arith.cool"
#1 ERROR "*"
#1 ERROR "@"
#1 ERROR "*"
#1 ERROR "*"
#1 CLASS
#1 TYPEID A
#1 '{'
#1 OBJECTID ar
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 INT_CONST 0
#1 ';'
#1 OBJECTID alue
#1 '('
#1 ')'
#1 ':'
#1 TYPEID Int
#1 '{'
#1 OBJECTID ar
#1 '}'
#1 ';'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID SELF_TYPE
#1 '{'
#1 '{'
#1 OBJECTID ar
#1 ASSIGN
#1 OBJECTID num
#1 ';'
#1 OBJECTID self
#1 ';'
#1 '}'
#1 '}'
#1 ';'
#1 OBJECTID method1
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID SELF_TYPE
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID same
#1 OBJECTID self
#1 '}'
#1 ';'
#1 OBJECTID method2
#1 '('
#1 OBJECTID num1
#1 ':'
#1 TYPEID Int
#1 ','
#1 OBJECTID num2
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID B
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID plus
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num1
#1 '+'
#1 OBJECTID num2
#1 ';'
#1 '('
#1 NEW
#1 TYPEID B
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID method3
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID C
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID negate
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 '~'
#1 OBJECTID num
#1 ';'
#1 '('
#1 NEW
#1 TYPEID C
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID method4
#1 '('
#1 OBJECTID num1
#1 ':'
#1 TYPEID Int
#1 ','
#1 OBJECTID num2
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID D
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID diff
#1 IF
#1 OBJECTID num2
#1 '<'
#1 OBJECTID num1
#1 THEN
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num1
#1 '-'
#1 OBJECTID num2
#1 ';'
#1 '('
#1 NEW
#1 TYPEID D
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 ELSE
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num2
#1 '-'
#1 OBJECTID num1
#1 ';'
#1 '('
#1 NEW
#1 TYPEID D
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 FI
#1 '}'
#1 ';'
#1 OBJECTID method5
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID E
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID factorial
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 INT_CONST 1
#1 IN
#1 '{'
#1 '('
#1 LET
#1 OBJECTID y
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 INT_CONST 1
#1 IN
#1 WHILE
#1 OBJECTID y
#1 LE
#1 OBJECTID num
#1 LOOP
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID x
#1 '*'
#1 OBJECTID y
#1 ';'
#1 OBJECTID y
#1 ASSIGN
#1 OBJECTID y
#1 '+'
#1 INT_CONST 1
#1 ';'
#1 '}'
#1 POOL
#1 ')'
#1 ';'
#1 '('
#1 NEW
#1 TYPEID E
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 CLASS
#1 TYPEID B
#1 INHERITS
#1 TYPEID A
#1 '{'
#1 '-'
#1 '-'
#1 TYPEID B
#1 OBJECTID is
#1 OBJECTID a
#1 OBJECTID number
#1 OBJECTID squared
#1 OBJECTID method5
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID E
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID square
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num
#1 '*'
#1 OBJECTID num
#1 ';'
#1 '('
#1 NEW
#1 TYPEID E
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 CLASS
#1 TYPEID C
#1 INHERITS
#1 TYPEID B
#1 '{'
#1 OBJECTID method6
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID A
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID negate
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 '~'
#1 OBJECTID num
#1 ';'
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID method5
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID E
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID cube
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num
#1 '*'
#1 OBJECTID num
#1 '*'
#1 OBJECTID num
#1 ';'
#1 '('
#1 NEW
#1 TYPEID E
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 CLASS
#1 TYPEID D
#1 INHERITS
#1 TYPEID B
#1 '{'
#1 OBJECTID method7
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID Bool
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID divisible
#1 OBJECTID by
#1 INT_CONST 3
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 OBJECTID num
#1 IN
#1 IF
#1 OBJECTID x
#1 '<'
#1 INT_CONST 0
#1 THEN
#1 OBJECTID method7
#1 '('
#1 '~'
#1 OBJECTID x
#1 ')'
#1 ELSE
#1 IF
#1 INT_CONST 0
#1 '='
#1 OBJECTID x
#1 THEN
#1 BOOL_CONST true
#1 ELSE
#1 IF
#1 INT_CONST 1
#1 '='
#1 OBJECTID x
#1 THEN
#1 BOOL_CONST false
#1 ELSE
#1 IF
#1 INT_CONST 2
#1 '='
#1 OBJECTID x
#1 THEN
#1 BOOL_CONST false
#1 ELSE
#1 OBJECTID method7
#1 '('
#1 OBJECTID x
#1 '-'
#1 INT_CONST 3
#1 ')'
#1 FI
#1 FI
#1 FI
#1 FI
#1 ')'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 CLASS
#1 TYPEID E
#1 INHERITS
#1 TYPEID D
#1 '{'
#1 OBJECTID method6
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID A
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID division
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 OBJECTID num
#1 '/'
#1 INT_CONST 8
#1 ';'
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 ERROR "~"
#1 ERROR "/"
#1 ERROR "\""
#1 ERROR "\""
#1 ERROR "\""
#1 ERROR "\""
#1 CLASS
#1 OBJECTID A2I
#1 '{'
#1 OBJECTID c2i
#1 '('
#1 OBJECTID char
#1 ':'
#1 TYPEID String
#1 ')'
#1 ':'
#1 TYPEID Int
#1 '{'
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "0"
#1 THEN
#1 INT_CONST 0
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "1"
#1 THEN
#1 INT_CONST 1
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "2"
#1 THEN
#1 INT_CONST 2
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "3"
#1 THEN
#1 INT_CONST 3
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "4"
#1 THEN
#1 INT_CONST 4
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "5"
#1 THEN
#1 INT_CONST 5
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "6"
#1 THEN
#1 INT_CONST 6
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "7"
#1 THEN
#1 INT_CONST 7
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "8"
#1 THEN
#1 INT_CONST 8
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "9"
#1 THEN
#1 INT_CONST 9
#1 ELSE
#1 '{'
#1 OBJECTID abort
#1 '('
#1 ')'
#1 ';'
#1 INT_CONST 0
#1 ';'
#1 '}'
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 '}'
#1 ';'
#1 OBJECTID i2c
#1 '('
#1 OBJECTID i
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID String
#1 '{'
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 0
#1 THEN
#1 STR_CONST "0"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 1
#1 THEN
#1 STR_CONST "1"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 2
#1 THEN
#1 STR_CONST "2"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 3
#1 THEN
#1 STR_CONST "3"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 4
#1 THEN
#1 STR_CONST "4"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 5
#1 THEN
#1 STR_CONST "5"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 6
#1 THEN
#1 STR_CONST "6"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 7
#1 THEN
#1 STR_CONST "7"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 8
#1 THEN
#1 STR_CONST "8"
#1 ELSE
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 9
#1 THEN
#1 STR_CONST "9"
#1 ELSE
#1 '{'
#1 OBJECTID abort
#1 '('
#1 ')'
#1 ';'
#1 STR_CONST ""
#1 ';'
#1 '}'
#1 '-'
#1 '-'
#1 OBJECTID the
#1 STR_CONST ""
#1 OBJECTID is
#1 OBJECTID needed
#1 OBJECTID to
#1 OBJECTID satisfy
#1 OBJECTID the
#1 OBJECTID typchecker
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 '}'
#1 ';'
#1 OBJECTID a2i
#1 '('
#1 OBJECTID s
#1 ':'
#1 TYPEID String
#1 ')'
#1 ':'
#1 TYPEID Int
#1 '{'
#1 IF
#1 OBJECTID s
#1 '.'
#1 OBJECTID length
#1 '('
#1 ')'
#1 '='
#1 INT_CONST 0
#1 THEN
#1 INT_CONST 0
#1 ELSE
#1 IF
#1 OBJECTID s
#1 '.'
#1 OBJECTID substr
#1 '('
#1 INT_CONST 0
#1 ','
#1 INT_CONST 1
#1 ')'
#1 '='
#1 STR_CONST "-"
#1 THEN
#1 '~'
#1 OBJECTID a2i_aux
#1 '('
#1 OBJECTID s
#1 '.'
#1 OBJECTID substr
#1 '('
#1 INT_CONST 1
#1 ','
#1 OBJECTID s
#1 '.'
#1 OBJECTID length
#1 '('
#1 ')'
#1 '-'
#1 INT_CONST 1
#1 ')'
#1 ')'
#1 ELSE
#1 IF
#1 OBJECTID s
#1 '.'
#1 OBJECTID substr
#1 '('
#1 INT_CONST 0
#1 ','
#1 INT_CONST 1
#1 ')'
#1 '='
#1 STR_CONST "+"
#1 THEN
#1 OBJECTID a2i_aux
#1 '('
#1 OBJECTID s
#1 '.'
#1 OBJECTID substr
#1 '('
#1 INT_CONST 1
#1 ','
#1 OBJECTID s
#1 '.'
#1 OBJECTID length
#1 '('
#1 ')'
#1 '-'
#1 INT_CONST 1
#1 ')'
#1 ')'
#1 ELSE
#1 OBJECTID a2i_aux
#1 '('
#1 OBJECTID s
#1 ')'
#1 FI
#1 FI
#1 FI
#1 '}'
#1 ';'
#1 OBJECTID a2i_aux
#1 '('
#1 OBJECTID s
#1 ':'
#1 TYPEID String
#1 ')'
#1 ':'
#1 TYPEID Int
#1 '{'
#1 '('
#1 LET
#1 OBJECTID int
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 INT_CONST 0
#1 IN
#1 '{'
#1 '('
#1 LET
#1 OBJECTID j
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 OBJECTID s
#1 '.'
#1 OBJECTID length
#1 '('
#1 ')'
#1 IN
#1 '('
#1 LET
#1 OBJECTID i
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 INT_CONST 0
#1 IN
#1 WHILE
#1 OBJECTID i
#1 '<'
#1 OBJECTID j
#1 LOOP
#1 '{'
#1 OBJECTID int
#1 ASSIGN
#1 OBJECTID int
#1 '*'
#1 INT_CONST 10
#1 '+'
#1 OBJECTID c2i
#1 '('
#1 OBJECTID s
#1 '.'
#1 OBJECTID substr
#1 '('
#1 OBJECTID i
#1 ','
#1 INT_CONST 1
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID i
#1 ASSIGN
#1 OBJECTID i
#1 '+'
#1 INT_CONST 1
#1 ';'
#1 '}'
#1 POOL
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID int
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID i2a
#1 '('
#1 OBJECTID i
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID String
#1 '{'
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 0
#1 THEN
#1 STR_CONST "0"
#1 ELSE
#1 IF
#1 INT_CONST 0
#1 '<'
#1 OBJECTID i
#1 THEN
#1 OBJECTID i2a_aux
#1 '('
#1 OBJECTID i
#1 ')'
#1 ELSE
#1 STR_CONST "-"
#1 '.'
#1 OBJECTID concat
#1 '('
#1 OBJECTID i2a_aux
#1 '('
#1 OBJECTID i
#1 '*'
#1 '~'
#1 INT_CONST 1
#1 ')'
#1 ')'
#1 FI
#1 FI
#1 '}'
#1 ';'
#1 OBJECTID i2a_aux
#1 '('
#1 OBJECTID i
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID String
#1 '{'
#1 IF
#1 OBJECTID i
#1 '='
#1 INT_CONST 0
#1 THEN
#1 STR_CONST ""
#1 ELSE
#1 '('
#1 LET
#1 OBJECTID next
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 OBJECTID i
#1 '/'
#1 INT_CONST 10
#1 IN
#1 OBJECTID i2a_aux
#1 '('
#1 OBJECTID next
#1 ')'
#1 '.'
#1 OBJECTID concat
#1 '('
#1 OBJECTID i2c
#1 '('
#1 OBJECTID i
#1 '-'
#1 OBJECTID next
#1 '*'
#1 INT_CONST 10
#1 ')'
#1 ')'
#1 ')'
#1 FI
#1 '}'
#1 ';'
#1 '}'
#1 ';'
#1 CLASS
#1 TYPEID Main
#1 INHERITS
#1 TYPEID IO
#1 '{'
#1 OBJECTID char
#1 ':'
#1 TYPEID String
#1 ';'
#1 OBJECTID avar
#1 ':'
#1 TYPEID A
#1 ';'
#1 OBJECTID a_var
#1 ':'
#1 TYPEID A
#1 ';'
#1 OBJECTID flag
#1 ':'
#1 TYPEID Bool
#1 ASSIGN
#1 BOOL_CONST true
#1 ';'
#1 OBJECTID menu
#1 '('
#1 ')'
#1 ':'
#1 TYPEID String
#1 '{'
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\n\tTo add a number to "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "...enter a:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo negate "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "...enter b:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo find the difference between "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "and another number...enter c:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo find the factorial of "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "...enter d:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo square "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "...enter e:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo cube "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "...enter f:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo find out if "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is a multiple of 3...enter g:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo divide "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "by 8...enter h:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo get a new number...enter j:\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\tTo quit...enter q:\n\n"
#1 ')'
#1 ';'
#1 OBJECTID in_string
#1 '('
#1 ')'
#1 ';'
#1 '}'
#1 '}'
#1 ';'
#1 OBJECTID prompt
#1 '('
#1 ')'
#1 ':'
#1 TYPEID String
#1 '{'
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\n"
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Please enter a number...  "
#1 ')'
#1 ';'
#1 OBJECTID in_string
#1 '('
#1 ')'
#1 ';'
#1 '}'
#1 '}'
#1 ';'
#1 OBJECTID get_int
#1 '('
#1 ')'
#1 ':'
#1 TYPEID Int
#1 '{'
#1 '{'
#1 '('
#1 LET
#1 OBJECTID z
#1 ':'
#1 OBJECTID A2I
#1 ASSIGN
#1 NEW
#1 OBJECTID A2I
#1 IN
#1 '('
#1 LET
#1 OBJECTID s
#1 ':'
#1 TYPEID String
#1 ASSIGN
#1 OBJECTID prompt
#1 '('
#1 ')'
#1 IN
#1 OBJECTID z
#1 '.'
#1 OBJECTID a2i
#1 '('
#1 OBJECTID s
#1 ')'
#1 ')'
#1 ')'
#1 ';'
#1 '}'
#1 '}'
#1 ';'
#1 OBJECTID is_even
#1 '('
#1 OBJECTID num
#1 ':'
#1 TYPEID Int
#1 ')'
#1 ':'
#1 TYPEID Bool
#1 '{'
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 OBJECTID num
#1 IN
#1 IF
#1 OBJECTID x
#1 '<'
#1 INT_CONST 0
#1 THEN
#1 OBJECTID is_even
#1 '('
#1 '~'
#1 OBJECTID x
#1 ')'
#1 ELSE
#1 IF
#1 INT_CONST 0
#1 '='
#1 OBJECTID x
#1 THEN
#1 BOOL_CONST true
#1 ELSE
#1 IF
#1 INT_CONST 1
#1 '='
#1 OBJECTID x
#1 THEN
#1 BOOL_CONST false
#1 ELSE
#1 OBJECTID is_even
#1 '('
#1 OBJECTID x
#1 '-'
#1 INT_CONST 2
#1 ')'
#1 FI
#1 FI
#1 FI
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID class_type
#1 '('
#1 OBJECTID var
#1 ':'
#1 TYPEID A
#1 ')'
#1 ':'
#1 TYPEID SELF_TYPE
#1 '{'
#1 CASE
#1 OBJECTID ar
#1 OF
#1 OBJECTID a
#1 ':'
#1 TYPEID A
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Class type is now A\n"
#1 ')'
#1 ';'
#1 OBJECTID b
#1 ':'
#1 TYPEID B
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Class type is now B\n"
#1 ')'
#1 ';'
#1 OBJECTID c
#1 ':'
#1 TYPEID C
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Class type is now C\n"
#1 ')'
#1 ';'
#1 OBJECTID d
#1 ':'
#1 TYPEID D
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Class type is now D\n"
#1 ')'
#1 ';'
#1 OBJECTID e
#1 ':'
#1 TYPEID E
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Class type is now E\n"
#1 ')'
#1 ';'
#1 OBJECTID o
#1 ':'
#1 TYPEID Object
#1 DARROW
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Oooops\n"
#1 ')'
#1 ';'
#1 ESAC
#1 '}'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID var
#1 ':'
#1 TYPEID A
#1 ')'
#1 ':'
#1 TYPEID SELF_TYPE
#1 '{'
#1 '('
#1 LET
#1 OBJECTID z
#1 ':'
#1 OBJECTID A2I
#1 ASSIGN
#1 NEW
#1 OBJECTID A2I
#1 IN
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 OBJECTID z
#1 '.'
#1 OBJECTID i2a
#1 '('
#1 OBJECTID var
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST " "
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 '}'
#1 ';'
#1 OBJECTID main
#1 '('
#1 ')'
#1 ':'
#1 TYPEID Object
#1 '{'
#1 '{'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 ';'
#1 WHILE
#1 OBJECTID flag
#1 LOOP
#1 '{'
#1 '-'
#1 '-'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID get_int
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "number "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 IF
#1 OBJECTID is_even
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 THEN
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is even!\n"
#1 ')'
#1 ELSE
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is odd!\n"
#1 ')'
#1 FI
#1 ';'
#1 '-'
#1 '-'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 '-'
#1 '-'
#1 OBJECTID prints
#1 OBJECTID out
#1 OBJECTID answer
#1 OBJECTID class_type
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID char
#1 ASSIGN
#1 OBJECTID menu
#1 '('
#1 ')'
#1 ';'
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "a"
#1 THEN
#1 '-'
#1 '-'
#1 OBJECTID add
#1 '{'
#1 OBJECTID a_var
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID get_int
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID B
#1 ')'
#1 '.'
#1 OBJECTID method2
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ','
#1 OBJECTID a_var
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 '}'
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "b"
#1 THEN
#1 '-'
#1 '-'
#1 OBJECTID negate
#1 CASE
#1 OBJECTID avar
#1 OF
#1 OBJECTID c
#1 ':'
#1 TYPEID C
#1 DARROW
#1 OBJECTID avar
#1 ASSIGN
#1 OBJECTID c
#1 '.'
#1 OBJECTID method6
#1 '('
#1 OBJECTID c
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID a
#1 ':'
#1 TYPEID A
#1 DARROW
#1 OBJECTID avar
#1 ASSIGN
#1 OBJECTID a
#1 '.'
#1 OBJECTID method3
#1 '('
#1 OBJECTID a
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID o
#1 ':'
#1 TYPEID Object
#1 DARROW
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "Oooops\n"
#1 ')'
#1 ';'
#1 OBJECTID abort
#1 '('
#1 ')'
#1 ';'
#1 INT_CONST 0
#1 ';'
#1 '}'
#1 ';'
#1 ESAC
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "c"
#1 THEN
#1 '-'
#1 '-'
#1 OBJECTID diff
#1 '{'
#1 OBJECTID a_var
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 OBJECTID get_int
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID D
#1 ')'
#1 '.'
#1 OBJECTID method4
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ','
#1 OBJECTID a_var
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 '}'
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "d"
#1 THEN
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID C
#1 ')'
#1 '@'
#1 TYPEID A
#1 '.'
#1 OBJECTID method5
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ELSE
#1 '-'
#1 '-'
#1 OBJECTID factorial
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "e"
#1 THEN
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID C
#1 ')'
#1 '@'
#1 TYPEID B
#1 '.'
#1 OBJECTID method5
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ELSE
#1 '-'
#1 '-'
#1 OBJECTID square
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "f"
#1 THEN
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID C
#1 ')'
#1 '@'
#1 TYPEID C
#1 '.'
#1 OBJECTID method5
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ELSE
#1 '-'
#1 '-'
#1 OBJECTID cube
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "g"
#1 THEN
#1 '-'
#1 '-'
#1 OBJECTID multiple
#1 OF
#1 INT_CONST 3
#1 ERROR "?"
#1 IF
#1 '('
#1 '('
#1 NEW
#1 TYPEID D
#1 ')'
#1 '.'
#1 OBJECTID method7
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ')'
#1 THEN
#1 '-'
#1 '-'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID method1
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "number "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is divisible by 3.\n"
#1 ')'
#1 ';'
#1 '}'
#1 ELSE
#1 '-'
#1 '-'
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID set_var
#1 '('
#1 INT_CONST 0
#1 ')'
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "number "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is not divisible by 3.\n"
#1 ')'
#1 ';'
#1 '}'
#1 FI
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "h"
#1 THEN
#1 '('
#1 LET
#1 OBJECTID x
#1 ':'
#1 TYPEID A
#1 IN
#1 '{'
#1 OBJECTID x
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID E
#1 ')'
#1 '.'
#1 OBJECTID method6
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 ';'
#1 '('
#1 LET
#1 OBJECTID r
#1 ':'
#1 TYPEID Int
#1 ASSIGN
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 '-'
#1 '('
#1 OBJECTID x
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 '*'
#1 INT_CONST 8
#1 ')'
#1 ')'
#1 IN
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "number "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID avar
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "is equal to "
#1 ')'
#1 ';'
#1 OBJECTID print
#1 '('
#1 OBJECTID x
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "times 8 with a remainder of "
#1 ')'
#1 ';'
#1 '('
#1 LET
#1 OBJECTID a
#1 ':'
#1 OBJECTID A2I
#1 ASSIGN
#1 NEW
#1 OBJECTID A2I
#1 IN
#1 '{'
#1 OBJECTID out_string
#1 '('
#1 OBJECTID a
#1 '.'
#1 OBJECTID i2a
#1 '('
#1 OBJECTID r
#1 ')'
#1 ')'
#1 ';'
#1 OBJECTID out_string
#1 '('
#1 STR_CONST "\n"
#1 ')'
#1 ';'
#1 '}'
#1 ')'
#1 ';'
#1 '-'
#1 '-'
#1 OBJECTID end
#1 LET
#1 OBJECTID a
#1 ':'
#1 '}'
#1 ')'
#1 ';'
#1 '-'
#1 '-'
#1 OBJECTID end
#1 LET
#1 OBJECTID r
#1 ':'
#1 OBJECTID avar
#1 ASSIGN
#1 OBJECTID x
#1 ';'
#1 '}'
#1 ')'
#1 '-'
#1 '-'
#1 OBJECTID end
#1 LET
#1 OBJECTID x
#1 ':'
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "j"
#1 THEN
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 ELSE
#1 IF
#1 OBJECTID char
#1 '='
#1 STR_CONST "q"
#1 THEN
#1 OBJECTID flag
#1 ASSIGN
#1 BOOL_CONST false
#1 ELSE
#1 OBJECTID avar
#1 ASSIGN
#1 '('
#1 NEW
#1 TYPEID A
#1 ')'
#1 '.'
#1 OBJECTID method1
#1 '('
#1 OBJECTID avar
#1 '.'
#1 OBJECTID value
#1 '('
#1 ')'
#1 ')'
#1 '-'
#1 '-'
#1 OBJECTID divide
#1 '/'
#1 INT_CONST 8
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 FI
#1 ';'
#1 '}'
#1 POOL
#1 ';'
#1 '}'
#1 '}'
#1 ';'
#1 '}'
#1 ';'
